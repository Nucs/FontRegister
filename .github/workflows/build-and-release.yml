name: Build and Release

on:
  push:
    branches: [ "main" ]
    tags: [ "v*", "testpublish/*" ]
  pull_request:
    branches: [ "main" ]

permissions: write-all

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          6.0.x
          8.0.x

    - name: Restore dependencies
      run: dotnet restore FontRegister.sln
      
    - name: Build
      run: dotnet build FontRegister.sln --configuration Release --no-restore
      
    - name: Test
      run: dotnet test FontRegister.sln --configuration Release --no-build --verbosity normal --logger trx --collect:"XPlat Code Coverage"
      
    - name: Upload Coverage Reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports
        path: |
          **/*.cobertura.xml
        retention-days: 5

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: ${{ github.workspace }}/**/TestResults/**/*
        retention-days: 5

  report:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Download Coverage Reports
      uses: actions/download-artifact@v4
      with:
        name: coverage-reports
        
    - name: Download Test Results
      uses: actions/download-artifact@v4
      with:
        name: test-results

    - name: Combine Coverage Reports
      uses: danielpalme/ReportGenerator-GitHub-Action@5.2.4
      with:
        reports: "**/*.cobertura.xml"
        targetdir: "${{ github.workspace }}"
        reporttypes: "Cobertura"
        verbosity: "Info"
        title: "Code Coverage"
        tag: "${{ github.run_number }}_${{ github.run_id }}"

    - name: Publish Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: "Cobertura.xml"
        badge: true
        fail_below_min: false
        format: markdown
        hide_branch_rate: false
        hide_complexity: false
        indicators: true
        output: both
        thresholds: "10 30"

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2.16.1
      if: always()
      with:
        files: "**/*.trx"

  publish:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/tags/testpublish/')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        framework: ['net48', 'net6.0-windows', 'net8.0-windows']
        runtime: ['win-x64', 'win-x86']
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          6.0.x
          8.0.x
          
    - name: Publish
      run: |
        if [ "${{ matrix.framework }}" = "net48" ]; then
          dotnet publish FontRegister/FontRegister.csproj \
            --configuration Release \
            --framework ${{ matrix.framework }} \
            --runtime ${{ matrix.runtime }} \
            --self-contained true \
            --output publish/${{ matrix.framework }}/${{ matrix.runtime }}
        else
          dotnet publish FontRegister/FontRegister.csproj \
            --configuration Release \
            --framework ${{ matrix.framework }} \
            --runtime ${{ matrix.runtime }} \
            --self-contained true \
            -p:PublishSingleFile=true \
            --output publish/${{ matrix.framework }}/${{ matrix.runtime }}
        fi

    - name: Create ZIP Archive
      run: |
        cd publish/${{ matrix.framework }}/${{ matrix.runtime }} && \
        zip -r ../../../FontRegister-${{ matrix.framework }}-${{ matrix.runtime }}.zip ./*
      
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: FontRegister-${{ matrix.framework }}-${{ matrix.runtime }}
        path: FontRegister-${{ matrix.framework }}-${{ matrix.runtime }}.zip
        retention-days: 5

  create-release:
    needs: publish
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: FontRegister-*
        merge-multiple: true

    - name: Generate Release Notes
      id: release-notes
      shell: pwsh
      run: |
        $notes = ./.github/get-release-notes.ps1 -CurrentTag $env:GITHUB_REF
        $notes = $notes -replace "'", "''"
        echo "RELEASE_NOTES<<EOF" >> $env:GITHUB_OUTPUT
        echo "$notes" >> $env:GITHUB_OUTPUT
        echo "EOF" >> $env:GITHUB_OUTPUT

    - name: Check if Prerelease
      id: check_prerelease
      run: |
        if [[ $GITHUB_REF =~ .*(-alpha|-beta|-prerelease).* ]]; then
          echo "IS_PRERELEASE=true" >> $GITHUB_OUTPUT
        else
          echo "IS_PRERELEASE=false" >> $GITHUB_OUTPUT
        fi

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: FontRegister-*.zip
        draft: false
        prerelease: ${{ steps.check_prerelease.outputs.IS_PRERELEASE }}
        body: ${{ steps.release-notes.outputs.RELEASE_NOTES }}
